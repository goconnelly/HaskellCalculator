
==================== FINAL INTERFACE ====================
2017-12-07 17:53:16.9607512 UTC

interface main@main:Main 8002
  interface hash: 294b041fa9fc23a5e9b23081e30fe4b0
  ABI hash: 5d73c7048b5de1c4342c50013b6d3109
  export-list hash: 7a0a7f9efb651d725d96df8f8a9f2703
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d03f9c13daa759bf70867d2835fdcb70
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.parserTest
  Main.repl
  Main.replDebug
  Main.usage
module dependencies:
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu
                      Win32-2.3.1.1@Win32-2.3.1.1 array-0.5.1.1@array-0.5.1.1
                      base-4.9.1.0 binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      calculator-0.1.0.0@calculator-0.1.0.0-9ShsRLERtFy4Roy8EMGn4g
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      megaparsec-5.3.1@megaparsec-5.3.1-EvtC1a4ozvRI8nz4BqBxmx
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      tf-random-0.5@tf-random-0.5-CJZw1ZWS5MOJlR60HqKEZL
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         megaparsec-5.3.1@megaparsec-5.3.1-EvtC1a4ozvRI8nz4BqBxmx:Text.Megaparsec.Error
                         megaparsec-5.3.1@megaparsec-5.3.1-EvtC1a4ozvRI8nz4BqBxmx:Text.Megaparsec.Pos
                         megaparsec-5.3.1@megaparsec-5.3.1-EvtC1a4ozvRI8nz4BqBxmx:Text.Megaparsec.Prim
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
import  -/  base-4.9.1.0:Data.Either 186ef9adf6b47e24f39efe9b2e18e352
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.IO.Handle cb8bbcf28331624bf008e1abd21fcddd
import  -/  base-4.9.1.0:GHC.IO.Handle.FD 13bd8641d665b1ca96fbeeb8bdfa3638
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.Environment 438c0b0bc0f94461b9c946d062a7eab9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  calculator-0.1.0.0@calculator-0.1.0.0-9ShsRLERtFy4Roy8EMGn4g:Common 7c8577ad357058b243b7f3a9d016c5e0
import  -/  calculator-0.1.0.0@calculator-0.1.0.0-9ShsRLERtFy4Roy8EMGn4g:Lib ff26cd7f136441d54998ed6ef29c7b49
import  -/  calculator-0.1.0.0@calculator-0.1.0.0-9ShsRLERtFy4Roy8EMGn4g:Parser ce41d4c85e91634d823e3c2023a45686
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base bc82d1baec8d9b794d947a6de22d7684
import  -/  unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Strict d885b1d9a1e033a14f7012d569830271
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b57a7b81806d649d25db7374021f15d8
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
e451d16594172100ccada553f2edb3f7
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs2 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> case GHC.Environment.getFullArgs1
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case System.Environment.dropRTSArgs ipv3 of wild1 {
                        []
                        -> case GHC.List.scanl2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        : ds3 xs -> Main.main2 xs ipv2 } }
                   GHC.Base.Just argv
                   -> case argv of wild1 {
                        []
                        -> case GHC.List.scanl2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        : ds2 xs -> Main.main2 xs ipv } } }) -}
f22bb88563b7f1a25118d9399a24b5c3
  main2 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (args :: [GHC.Base.String])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case args of wild {
                   []
                   -> Main.main7
                        (Data.HashMap.Base.Empty @ GHC.Base.String @ Common.Val)
                        eta
                   : ds ds1
                   -> let {
                        $wfail :: GHC.Prim.State# GHC.Prim.RealWorld
                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case GHC.Base.eqString ds Main.main6 of wild1 {
                            GHC.Types.False
                            -> GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout
                                 Main.usage
                                 GHC.Types.True
                                 w
                            GHC.Types.True
                            -> case ds1 of wild2 {
                                 [] -> Main.main5 w
                                 : ipv ipv1
                                 -> GHC.IO.Handle.Text.hPutStr2
                                      GHC.IO.Handle.FD.stdout
                                      Main.usage
                                      GHC.Types.True
                                      w } }
                      } in
                      case GHC.Base.eqString ds Main.main4 of wild1 {
                        GHC.Types.False -> $wfail eta
                        GHC.Types.True
                        -> case ds1 of wild2 {
                             []
                             -> Main.main3
                                  (Data.HashMap.Base.Empty @ GHC.Base.String @ Common.Val)
                                  eta
                             : ipv ipv1 -> $wfail eta } } }) -}
64bb7812e05225f57e58a9615a08dda9
  main3 ::
    Common.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
1044adb11b5bc764b8d387da8dd544a3
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-d"#) -}
a741f190ec378415baf02815b0c2b608
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
a7d2d03e280f0db352f6d57b15529829
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-p"#) -}
5cf35b7bc0e4f10a06ef8f1a919909b2
  main7 ::
    Common.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
76d184cf6dbe800cb06a9edbbd680a13
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
08f0d6b50e75d6006e5b64eec23a3ac8
  parserTest :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main5 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
3f47d37d47467bf3ae9cec937fdde76e
  repl :: Common.Env -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main7
                  `cast`
                (<Common.Env>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9b45c008bfcae8c83d1be01032499fe6
  replDebug :: Common.Env -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main3
                  `cast`
                (<Common.Env>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
76a496d341ec894a0150fbcb8fd907f3
  usage :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Usage: Run with no args for normal calculator mode.\n\
                   \       Run with the -p option to run the parser only.\n\
                   \       Run with the -d option to run the calculator in debug mode."#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

